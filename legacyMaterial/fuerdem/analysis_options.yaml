include: package:pedantic/analysis_options.yaml

analyzer:
  exclude:
    - build/**
    - lib/**.g.dart
    - local/**
  errors:
    avoid_print: ignore
  language:
    strict-inference: true
    strict-raw-types: false

## linter document at https://dart-lang.github.io/linter/lints/
linter:
  rules:
    - always_declare_return_types
    - always_put_control_body_on_new_line
    - always_require_non_null_named_parameters
    - annotate_overrides
    - avoid_catching_errors
    - avoid_double_and_int_checks
    - avoid_empty_else
    - avoid_field_initializers_in_const_classes
    - avoid_implementing_value_types
    - avoid_init_to_null
    - avoid_null_checks_in_equality_operators
    - avoid_print
    - avoid_private_typedef_functions
    - avoid_relative_lib_imports
    - avoid_return_types_on_setters
    - avoid_returning_null
    - avoid_returning_null_for_void
    - avoid_shadowing_type_parameters
    - avoid_single_cascade_in_expression_statements
    - avoid_types_as_parameter_names
    - avoid_types_on_closure_parameters
    - avoid_unused_constructor_parameters
    - await_only_futures
    - camel_case_types
    - cancel_subscriptions
    - cascade_invocations
    - close_sinks
    - constant_identifier_names
    - curly_braces_in_flow_control_structures
    - directives_ordering
    - empty_catches
    - empty_constructor_bodies
    - empty_statements
    - file_names
    - flutter_style_todos
    - hash_and_equals
    - implementation_imports
    - invariant_booleans
    - iterable_contains_unrelated_type
    - join_return_with_assignment
    - library_prefixes
    - list_remove_unrelated_type
    - literal_only_boolean_expressions
    - no_duplicate_case_values
    - non_constant_identifier_names
    - null_closures
    - one_member_abstracts
    - only_throw_errors
    - overridden_fields
    - parameter_assignments
    - prefer_adjacent_string_concatenation
    - prefer_asserts_in_initializer_lists
    - prefer_collection_literals
    - prefer_conditional_assignment
    - prefer_const_constructors_in_immutables
    - prefer_const_declarations
    - prefer_constructors_over_static_methods
    - prefer_contains
    - prefer_equal_for_default_values
    - prefer_final_fields
    - prefer_final_in_for_each
    - prefer_final_locals
    - prefer_for_elements_to_map_fromIterable
    - prefer_foreach
    - prefer_function_declarations_over_variables
    - prefer_generic_function_type_aliases
    - prefer_if_elements_to_conditional_expressions
    - prefer_if_null_operators
    - prefer_initializing_formals
    - prefer_inlined_adds
    - prefer_int_literals
    - prefer_interpolation_to_compose_strings
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_iterable_whereType
    - prefer_mixin
    - prefer_null_aware_operators
    - prefer_single_quotes
    - prefer_spread_collections
    - prefer_typing_uninitialized_variables
    - recursive_getters
    - slash_for_doc_comments
    - sort_child_properties_last
    - sort_constructors_first
    - sort_unnamed_constructors_first
    - test_types_in_equals
    - type_annotate_public_apis
    - type_init_formals
    - unawaited_futures
    - unnecessary_await_in_return
    - unnecessary_brace_in_string_interps
    - unnecessary_const
    - unnecessary_getters_setters
    - unnecessary_lambdas
    - unnecessary_new
    - unnecessary_null_in_if_null_operators
    - unnecessary_overrides
    - unnecessary_parenthesis
    - unnecessary_statements
    - unnecessary_this
    - unrelated_type_equality_checks
    - use_full_hex_values_for_flutter_colors
    - use_function_type_syntax_for_parameters
    - use_rethrow_when_possible
    - valid_regexps
    - void_checks
    - prefer_expression_function_bodies

## Copyright (c) 2019, the Dart project authors.  Please see the AUTHORS file
## for details. All rights reserved. Use of this source code is governed by a
## BSD-style license that can be found in the LICENSE file.
##
## Google internally enforced rules. See README.md for more information,
## including a list of lints that are intentionally _not_ enforced.
#include: package:pedantic/analysis_options.yaml
#
#analyzer:
#  strong-mode:
#    implicit-casts: false
#    implicit-dynamic: true
#  #exclude:
#  # - lib/client.dart
#  # - lib/server/*.g.dart
#  # - test/_data/**
#
#linter:
#  rules:
#    - always_declare_return_types
#    - always_require_non_null_named_parameters
#    - annotate_overrides
#    - avoid_return_types_on_setters
#    - avoid_empty_else
#    - avoid_init_to_null
#    - avoid_null_checks_in_equality_operators
#    - avoid_relative_lib_imports
#    - avoid_shadowing_type_parameters
#    - avoid_types_as_parameter_names
#    - await_only_futures
#    - avoid_web_libraries_in_flutter
#    - camel_case_extensions
#    - close_sinks
#    - curly_braces_in_flow_control_structures
#    - control_flow_in_finally
#    - cancel_subscriptions
#    - camel_case_types
#    - empty_statements
#    - empty_catches
#    - empty_constructor_bodies
#    - hash_and_equals
#    - implementation_imports
#    - library_names
#    - library_prefixes
#    - no_duplicate_case_values
#    - non_constant_identifier_names
#    - null_closures
#    - omit_local_variable_types
#    - package_api_docs
#    - package_names
#    - package_prefixed_library_names
#    - prefer_adjacent_string_concatenation
#    - prefer_collection_literals
#    - prefer_conditional_assignment
#    - prefer_contains
#    - prefer_is_not_empty
#    - prefer_equal_for_default_values
#    - prefer_final_fields
#    - prefer_for_elements_to_map_fromIterable
#    - prefer_generic_function_type_aliases
#    - prefer_if_null_operators
#    - prefer_is_empty
#    - prefer_iterable_whereType
#    - prefer_single_quotes
#    - prefer_spread_collections
#    - recursive_getters
#    - slash_for_doc_comments
#    - test_types_in_equals
#    - throw_in_finally
#    - type_init_formals
#    - unawaited_futures
#    - unnecessary_const
#    - unnecessary_new
#    - unnecessary_brace_in_string_interps
#    - unnecessary_statements
#    - unnecessary_null_in_if_null_operators
#    - unrelated_type_equality_checks
#    - unnecessary_getters_setters
#    - unnecessary_this
#    - use_function_type_syntax_for_parameters
#    - use_rethrow_when_possible
#    - valid_regexps
#    # - comment_references # we do not presume as to what people want to reference in their dartdocs
#    # - constant_identifier_names # https://github.com/dart-lang/linter/issues/204
#    # - invariant_booleans
#    # - iterable_contains_unrelated_type
#    # - library_prefixes
#    # - list_remove_unrelated_type
#    # - literal_only_boolean_expressions
#    # - one_member_abstracts
#    # - only_throw_errors
#    # - overridden_fields
#    # - prefer_mixin # https://github.com/dart-lang/language/issues/32
#    # - public_member_api_docs
#    # - sort_constructors_first
#    # - sort_unnamed_constructors_first
#    # - super_goes_last # no longer needed w/ Dart 2
#    # - type_annotate_public_apis # subset of always_specify_types
#    # - unawaited_futures
